plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp' version '1.6.21-1.0.6'    // for NavDestinations.
}
kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}
android {
    compileSdk 33

    defaultConfig {
        applicationId "com.mcssoft.racedaycompose"
        minSdk 27
        targetSdk 33
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_ver
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    lintOptions {
        quiet false
        abortOnError true
        disable 'UnusedMaterialScaffoldPaddingParameter'
    }
}

dependencies {

    def room_ver = '2.5.0-alpha02'
    def retrofit_ver = '2.9.0'
    def okhttp_ver = '5.0.0-alpha.3'
    def hilt_models_ver = '1.0.0-alpha03'
    def compose_ver = '1.3.0-alpha03'

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"

    /* Compose.
     * Not sure all these actually required.
     */
    implementation "androidx.compose.ui:ui:$compose_ver"
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation "androidx.compose.ui:ui-tooling:$compose_ver"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ver"
    implementation "androidx.compose.material:material:$compose_ver"
    implementation "androidx.compose.foundation:foundation:$compose_ver"
    implementation "androidx.navigation:navigation-compose:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0-alpha01"
    implementation "androidx.compose.material:material-icons-extended:$compose_ver"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
//    implementation "androidx.compose.material3:material3:1.0.0-alpha12"

    /* Room database. */
    kapt "androidx.room:room-compiler:$room_ver"
    implementation "androidx.room:room-ktx:$room_ver"
    implementation "androidx.room:room-runtime:$room_ver"

    /* Hilt DI. */
    kapt "com.google.dagger:hilt-compiler:$hilt_ver"
    kapt "androidx.hilt:hilt-compiler:$hilt_models_ver"
    implementation "com.google.dagger:hilt-core:2.42"
    implementation "com.google.dagger:hilt-android:2.41"   // 2.42 available but throwing errors.
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_models_ver"

    /* Retrofit. */
    implementation "com.squareup.okhttp3:okhttp:$okhttp_ver"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_ver"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_ver"

    /* DataStore.
     * Not sure if both are required.
     */
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore-preferences-core:1.0.0"

    /* WorkManager with coroutines. */
    implementation "androidx.work:work-runtime-ktx:2.7.1"

    /* Leak Canary.
     * debugImplementation because LeakCanary should only run in debug builds.
     */
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
    //implementation 'com.squareup.leakcanary:leakcanary-object-watcher-android:2.7'

    /* ComposeDestinations.
     * Doco: "A KSP library that processes annotations and generates code that uses Official Jetpack
     *       Compose Navigation under the hood. It hides the complex, non-type-safe and boilerplate
     *       code you would have to write otherwise..."
     */
    implementation 'io.github.raamcosta.compose-destinations:core:1.7.15-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.7.15-beta'
}